// Auto-generated. Do not edit!

// (in-package behavior_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let control_core_msgs = _finder('control_core_msgs');

//-----------------------------------------------------------

class MoveToJointFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.pose = null;
    }
    else {
      if (initObj.hasOwnProperty('pose')) {
        this.pose = initObj.pose
      }
      else {
        this.pose = new control_core_msgs.msg.Vector();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type MoveToJointFeedback
    // Serialize message field [pose]
    bufferOffset = control_core_msgs.msg.Vector.serialize(obj.pose, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type MoveToJointFeedback
    let len;
    let data = new MoveToJointFeedback(null);
    // Deserialize message field [pose]
    data.pose = control_core_msgs.msg.Vector.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += control_core_msgs.msg.Vector.getMessageSize(object.pose);
    return length;
  }

  static datatype() {
    // Returns string type for a message object
    return 'behavior_msgs/MoveToJointFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '841a03b07f9c3f786f5afdf61c067d2c';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    control_core_msgs/Vector pose
    
    ================================================================================
    MSG: control_core_msgs/Vector
    float64[] data
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new MoveToJointFeedback(null);
    if (msg.pose !== undefined) {
      resolved.pose = control_core_msgs.msg.Vector.Resolve(msg.pose)
    }
    else {
      resolved.pose = new control_core_msgs.msg.Vector()
    }

    return resolved;
    }
};

module.exports = MoveToJointFeedback;
