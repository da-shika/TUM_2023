// Auto-generated. Do not edit!

// (in-package behavior_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let control_core_msgs = _finder('control_core_msgs');
let std_msgs = _finder('std_msgs');

//-----------------------------------------------------------

class MoveToJointGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.target = null;
      this.intermediate = null;
      this.motion_task = null;
      this.period = null;
    }
    else {
      if (initObj.hasOwnProperty('target')) {
        this.target = initObj.target
      }
      else {
        this.target = new control_core_msgs.msg.Vector();
      }
      if (initObj.hasOwnProperty('intermediate')) {
        this.intermediate = initObj.intermediate
      }
      else {
        this.intermediate = new control_core_msgs.msg.Vector();
      }
      if (initObj.hasOwnProperty('motion_task')) {
        this.motion_task = initObj.motion_task
      }
      else {
        this.motion_task = new std_msgs.msg.String();
      }
      if (initObj.hasOwnProperty('period')) {
        this.period = initObj.period
      }
      else {
        this.period = new std_msgs.msg.Float64();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type MoveToJointGoal
    // Serialize message field [target]
    bufferOffset = control_core_msgs.msg.Vector.serialize(obj.target, buffer, bufferOffset);
    // Serialize message field [intermediate]
    bufferOffset = control_core_msgs.msg.Vector.serialize(obj.intermediate, buffer, bufferOffset);
    // Serialize message field [motion_task]
    bufferOffset = std_msgs.msg.String.serialize(obj.motion_task, buffer, bufferOffset);
    // Serialize message field [period]
    bufferOffset = std_msgs.msg.Float64.serialize(obj.period, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type MoveToJointGoal
    let len;
    let data = new MoveToJointGoal(null);
    // Deserialize message field [target]
    data.target = control_core_msgs.msg.Vector.deserialize(buffer, bufferOffset);
    // Deserialize message field [intermediate]
    data.intermediate = control_core_msgs.msg.Vector.deserialize(buffer, bufferOffset);
    // Deserialize message field [motion_task]
    data.motion_task = std_msgs.msg.String.deserialize(buffer, bufferOffset);
    // Deserialize message field [period]
    data.period = std_msgs.msg.Float64.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += control_core_msgs.msg.Vector.getMessageSize(object.target);
    length += control_core_msgs.msg.Vector.getMessageSize(object.intermediate);
    length += std_msgs.msg.String.getMessageSize(object.motion_task);
    return length + 8;
  }

  static datatype() {
    // Returns string type for a message object
    return 'behavior_msgs/MoveToJointGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'af979f8fbb920ef78156356fc24a7d2b';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    control_core_msgs/Vector target         # target joint pose
    control_core_msgs/Vector intermediate   # optional intermediate target
    std_msgs/String motion_task             # motion task for the movement
    std_msgs/Float64 period                 # time period of the motion
    
    ================================================================================
    MSG: control_core_msgs/Vector
    float64[] data
    ================================================================================
    MSG: std_msgs/String
    string data
    
    ================================================================================
    MSG: std_msgs/Float64
    float64 data
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new MoveToJointGoal(null);
    if (msg.target !== undefined) {
      resolved.target = control_core_msgs.msg.Vector.Resolve(msg.target)
    }
    else {
      resolved.target = new control_core_msgs.msg.Vector()
    }

    if (msg.intermediate !== undefined) {
      resolved.intermediate = control_core_msgs.msg.Vector.Resolve(msg.intermediate)
    }
    else {
      resolved.intermediate = new control_core_msgs.msg.Vector()
    }

    if (msg.motion_task !== undefined) {
      resolved.motion_task = std_msgs.msg.String.Resolve(msg.motion_task)
    }
    else {
      resolved.motion_task = new std_msgs.msg.String()
    }

    if (msg.period !== undefined) {
      resolved.period = std_msgs.msg.Float64.Resolve(msg.period)
    }
    else {
      resolved.period = new std_msgs.msg.Float64()
    }

    return resolved;
    }
};

module.exports = MoveToJointGoal;
