;; Auto-generated. Do not edit!


(when (boundp 'behavior_msgs::MoveToCartesianMobileManipulatorGoal)
  (if (not (find-package "BEHAVIOR_MSGS"))
    (make-package "BEHAVIOR_MSGS"))
  (shadow 'MoveToCartesianMobileManipulatorGoal (find-package "BEHAVIOR_MSGS")))
(unless (find-package "BEHAVIOR_MSGS::MOVETOCARTESIANMOBILEMANIPULATORGOAL")
  (make-package "BEHAVIOR_MSGS::MOVETOCARTESIANMOBILEMANIPULATORGOAL"))

(in-package "ROS")
;;//! \htmlinclude MoveToCartesianMobileManipulatorGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass behavior_msgs::MoveToCartesianMobileManipulatorGoal
  :super ros::object
  :slots (_targets _motion_tasks _period ))

(defmethod behavior_msgs::MoveToCartesianMobileManipulatorGoal
  (:init
   (&key
    ((:targets __targets) (instance geometry_msgs::PoseArray :init))
    ((:motion_tasks __motion_tasks) ())
    ((:period __period) (instance std_msgs::Float64 :init))
    )
   (send-super :init)
   (setq _targets __targets)
   (setq _motion_tasks __motion_tasks)
   (setq _period __period)
   self)
  (:targets
   (&rest __targets)
   (if (keywordp (car __targets))
       (send* _targets __targets)
     (progn
       (if __targets (setq _targets (car __targets)))
       _targets)))
  (:motion_tasks
   (&rest __motion_tasks)
   (if (keywordp (car __motion_tasks))
       (send* _motion_tasks __motion_tasks)
     (progn
       (if __motion_tasks (setq _motion_tasks (car __motion_tasks)))
       _motion_tasks)))
  (:period
   (&rest __period)
   (if (keywordp (car __period))
       (send* _period __period)
     (progn
       (if __period (setq _period (car __period)))
       _period)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseArray _targets
    (send _targets :serialization-length)
    ;; std_msgs/String[] _motion_tasks
    (apply #'+ (send-all _motion_tasks :serialization-length)) 4
    ;; std_msgs/Float64 _period
    (send _period :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseArray _targets
       (send _targets :serialize s)
     ;; std_msgs/String[] _motion_tasks
     (write-long (length _motion_tasks) s)
     (dolist (elem _motion_tasks)
       (send elem :serialize s)
       )
     ;; std_msgs/Float64 _period
       (send _period :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseArray _targets
     (send _targets :deserialize buf ptr-) (incf ptr- (send _targets :serialization-length))
   ;; std_msgs/String[] _motion_tasks
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _motion_tasks (let (r) (dotimes (i n) (push (instance std_msgs::String :init) r)) r))
     (dolist (elem- _motion_tasks)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; std_msgs/Float64 _period
     (send _period :deserialize buf ptr-) (incf ptr- (send _period :serialization-length))
   ;;
   self)
  )

(setf (get behavior_msgs::MoveToCartesianMobileManipulatorGoal :md5sum-) "68dd2db2f792d0ee848d89b6adce522f")
(setf (get behavior_msgs::MoveToCartesianMobileManipulatorGoal :datatype-) "behavior_msgs/MoveToCartesianMobileManipulatorGoal")
(setf (get behavior_msgs::MoveToCartesianMobileManipulatorGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PoseArray targets  # target poses wrt frame_id in header field
std_msgs/String[] motion_tasks       # motion task names for the movement
std_msgs/Float64 period           # time period of the motion

================================================================================
MSG: geometry_msgs/PoseArray
# An array of poses with a header for global reference.

Header header

Pose[] poses

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

================================================================================
MSG: std_msgs/String
string data

================================================================================
MSG: std_msgs/Float64
float64 data
")



(provide :behavior_msgs/MoveToCartesianMobileManipulatorGoal "68dd2db2f792d0ee848d89b6adce522f")


